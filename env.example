# CI/CD Pipeline Health Dashboard - Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
POSTGRES_USER=cicd_user
POSTGRES_PASSWORD=supersecret
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=cicd_health

# =============================================================================
# GITHUB ACTIONS INTEGRATION
# =============================================================================
# GitHub Personal Access Token (required for GitHub monitoring)
# Generate at: https://github.com/settings/tokens
# Required scopes: repo, workflow, read:org
GITHUB_TOKEN=ghp_your_github_token_here

# Comma-separated list of repositories to monitor
# Format: owner/repository-name
# Examples:
# GITHUB_REPOS=mycompany/frontend-app,mycompany/backend-api
# GITHUB_REPOS=username/project1,org-name/project2
GITHUB_REPOS=

# =============================================================================
# GITLAB CI INTEGRATION
# =============================================================================
# GitLab Personal Access Token (optional)
# Generate at: https://gitlab.com/-/profile/personal_access_tokens
# Required scopes: read_api
GITLAB_TOKEN=glpat_your_gitlab_token_here

# Comma-separated list of GitLab projects to monitor
# Format: project_id or group/project-name
# Examples:
# GITLAB_PROJECTS=12345,67890
# GITLAB_PROJECTS=mygroup/frontend,mygroup/backend
GITLAB_PROJECTS=

# =============================================================================
# JENKINS INTEGRATION
# =============================================================================
# Jenkins URL and credentials (optional)
JENKINS_URL=http://jenkins.company.com
JENKINS_USER=jenkins_user
JENKINS_TOKEN=your_jenkins_api_token

# Comma-separated list of Jenkins jobs to monitor
# Format: job_name or folder/job_name
# Examples:
# JENKINS_JOBS=deployment,testing/unit-tests
JENKINS_JOBS=

# =============================================================================
# WEBHOOK CONFIGURATION
# =============================================================================
# Secret key for webhook validation (required for webhooks)
# Generate a strong, random string
WEBHOOK_SECRET=your_webhook_secret_here

# Frontend origin for CORS (adjust for your setup)
FRONTEND_ORIGIN=http://localhost:5173

# =============================================================================
# ALERTING CONFIGURATION
# =============================================================================
# Slack webhook URL for notifications (optional)
# Format: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
SLACK_WEBHOOK_URL=

# Email configuration for notifications (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_app_password
SMTP_FROM=your_email@gmail.com
SMTP_TO=team@company.com

# =============================================================================
# COLLECTOR CONFIGURATION
# =============================================================================
# Comma-separated list of providers to enable
# Options: github,gitlab,jenkins
PROVIDERS=github,gitlab,jenkins

# Polling interval for collectors (seconds)
# Lower values = more real-time but higher API usage
COLLECTOR_POLL_SECONDS=30

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Debug mode (set to true for development)
DEBUG=false

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# =============================================================================
# EXAMPLE CONFIGURATION
# =============================================================================
# Here's a complete working example:

# GITHUB_TOKEN=ghp_1234567890abcdef1234567890abcdef12345678
# GITHUB_REPOS=mycompany/frontend-app,mycompany/backend-api
# WEBHOOK_SECRET=my_super_secret_key_123
# PROVIDERS=github
# COLLECTOR_POLL_SECONDS=30

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Never commit .env files to version control
# 2. Use strong, unique secrets for webhooks
# 3. Rotate tokens regularly
# 4. Limit token scopes to minimum required
# 5. Use environment-specific configurations for production
